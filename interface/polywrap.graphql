"""
Response: Represents the server's response to an HTTP request.
"""
type Response {
    """
    status: HTTP status code of the response.
    """
    status: Int!

    """
    statusText: The text phrase corresponding to the status code.
    """
    statusText: String!

    """
    headers: HTTP headers in the response.
    """
    headers: Map @annotate(type: "Map<String!, String!>")

    """
    body: The body of the response, if any.
    """
    body: String
}

"""
Request: Represents an HTTP request to be sent to a server.
"""
type Request {
    """
    headers: HTTP headers to be included in the request.
    """
    headers: Map @annotate(type: "Map<String!, String!>")

    """
    urlParams: Query parameters to be appended to the request URL.
    """
    urlParams: Map @annotate(type: "Map<String!, String!>")

    """
    responseType: Desired format of the response.
    """
    responseType: ResponseType!

    """
    body: The body of the request, if any.
    """
    body: String

    """
    timeout: Timeout for the request in milliseconds. If not set, the request will not timeout.
    """
    timeout: Int
}

"""
ResponseType: Specifies the expected format of the response from the server.
"""
enum ResponseType {
    """
    TEXT: The response should be returned in text format.
    """
    TEXT

    """
    BINARY: The response should be returned in binary format (i.e. a base64 string).
    """
    BINARY
}

"""
HTTPMethod: Specifies the HTTP method to be used when making the request.
"""
enum HTTPMethod {
    """
    GET: The HTTP GET method requests a representation of the specified resource.
    """
    GET

    """
    POST: The HTTP POST method sends data to the server to create a new resource.
    """
    POST

    """
    PUT: The HTTP PUT method updates a current resource with new data.
    """
    PUT

    """
    DELETE: The HTTP DELETE method deletes the specified resource.
    """
    DELETE

    """
    HEAD: The HTTP HEAD method asks for a response identical to that of a GET request, but without the response body.
    """
    HEAD

    """
    PATCH: The HTTP PATCH method is used to apply partial modifications to a resource.
    """
    PATCH

    """
    OPTIONS: The HTTP OPTIONS method describes the communication options for the target resource.
    """
    OPTIONS
}

type Module {
    """
    Send an HTTP Request to the specified URL using the specified method.
    """
    request(url: String!, method: HTTPMethod!, request: Request): Response
}
