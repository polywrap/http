"""
This type stub file was generated by pyright.
"""

import msgpack
from enum import Enum
from typing import Any, Dict, List, Set, Tuple, cast
from msgpack.ext import ExtType
from msgpack.exceptions import UnpackValueError
from .generic_map import GenericMap

"""
polywrap-msgpack adds ability to encode/decode to/from msgpack format.

It provides msgpack_encode and msgpack_decode functions
which allows user to encode and decode to/from msgpack bytes

It also defines the default Extension types and extension hook for
custom extension types defined by wrap standard
"""
class ExtensionTypes(Enum):
    """Wrap msgpack extension types."""
    GENERIC_MAP = ...


def encode_ext_hook(obj: Any) -> ExtType:
    """Extension hook for extending the msgpack supported types.

    Args:
        obj (Any): object to be encoded

    Raises:
        TypeError: when given object is not supported

    Returns:
        Tuple[int, bytes]: extension type code and payload
    """
    ...

def decode_ext_hook(code: int, data: bytes) -> Any:
    """Extension hook for extending the msgpack supported types.

    Args:
        code (int): extension type code (>0 & <256)
        data (bytes): msgpack deserializable data as payload

    Raises:
        UnpackValueError: when given invalid extension type code

    Returns:
        Any: decoded object
    """
    ...

def sanitize(value: Any) -> Any:
    """Sanitizes the value into msgpack encoder compatible format.

    Args:
        value: any valid python value

    Raises:
        ValueError: when dict key isn't string

    Returns:
        Any: msgpack compatible sanitized value
    """
    ...

def msgpack_encode(value: Any) -> bytes:
    """Encode any python object into msgpack bytes.

    Args:
        value: any valid python object

    Returns:
        bytes: encoded msgpack value
    """
    ...

def msgpack_decode(val: bytes) -> Any:
    """Decode msgpack bytes into a valid python object.

    Args:
        val: msgpack encoded bytes

    Returns:
        Any: python object
    """
    ...

